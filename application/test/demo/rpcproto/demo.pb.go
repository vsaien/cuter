// Code generated by protoc-gen-go. DO NOT EDIT.
// source: demo.proto

// protoc --go_out=plugins=grpc:. demo.proto

package rpcproto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DemoRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DemoRequest) Reset()         { *m = DemoRequest{} }
func (m *DemoRequest) String() string { return proto.CompactTextString(m) }
func (*DemoRequest) ProtoMessage()    {}
func (*DemoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{0}
}

func (m *DemoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DemoRequest.Unmarshal(m, b)
}
func (m *DemoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DemoRequest.Marshal(b, m, deterministic)
}
func (m *DemoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DemoRequest.Merge(m, src)
}
func (m *DemoRequest) XXX_Size() int {
	return xxx_messageInfo_DemoRequest.Size(m)
}
func (m *DemoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DemoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DemoRequest proto.InternalMessageInfo

func (m *DemoRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type DemoResponse struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DemoResponse) Reset()         { *m = DemoResponse{} }
func (m *DemoResponse) String() string { return proto.CompactTextString(m) }
func (*DemoResponse) ProtoMessage()    {}
func (*DemoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ca53982754088a9d, []int{1}
}

func (m *DemoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DemoResponse.Unmarshal(m, b)
}
func (m *DemoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DemoResponse.Marshal(b, m, deterministic)
}
func (m *DemoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DemoResponse.Merge(m, src)
}
func (m *DemoResponse) XXX_Size() int {
	return xxx_messageInfo_DemoResponse.Size(m)
}
func (m *DemoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DemoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DemoResponse proto.InternalMessageInfo

func (m *DemoResponse) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*DemoRequest)(nil), "remotedemo.DemoRequest")
	proto.RegisterType((*DemoResponse)(nil), "remotedemo.DemoResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DemoHandlerClient is the client API for DemoHandler service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DemoHandlerClient interface {
	DemoFuc(ctx context.Context, in *DemoRequest, opts ...grpc.CallOption) (*DemoResponse, error)
}

type demoHandlerClient struct {
	cc *grpc.ClientConn
}

func NewDemoHandlerClient(cc *grpc.ClientConn) DemoHandlerClient {
	return &demoHandlerClient{cc}
}

func (c *demoHandlerClient) DemoFuc(ctx context.Context, in *DemoRequest, opts ...grpc.CallOption) (*DemoResponse, error) {
	out := new(DemoResponse)
	err := c.cc.Invoke(ctx, "/remotedemo.DemoHandler/demoFuc", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DemoHandlerServer is the server API for DemoHandler service.
type DemoHandlerServer interface {
	DemoFuc(context.Context, *DemoRequest) (*DemoResponse, error)
}

func RegisterDemoHandlerServer(s *grpc.Server, srv DemoHandlerServer) {
	s.RegisterService(&_DemoHandler_serviceDesc, srv)
}

func _DemoHandler_DemoFuc_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DemoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoHandlerServer).DemoFuc(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/remotedemo.DemoHandler/DemoFuc",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoHandlerServer).DemoFuc(ctx, req.(*DemoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DemoHandler_serviceDesc = grpc.ServiceDesc{
	ServiceName: "remotedemo.DemoHandler",
	HandlerType: (*DemoHandlerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "demoFuc",
			Handler:    _DemoHandler_DemoFuc_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "demo.proto",
}

func init() { proto.RegisterFile("demo.proto", fileDescriptor_ca53982754088a9d) }

var fileDescriptor_ca53982754088a9d = []byte{
	// 133 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x49, 0xcd, 0xcd,
	0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x2a, 0x4a, 0xcd, 0xcd, 0x2f, 0x49, 0x05, 0x89,
	0x28, 0x29, 0x73, 0x71, 0xbb, 0xa4, 0xe6, 0xe6, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08,
	0x89, 0x70, 0xb1, 0x96, 0xe4, 0x67, 0xa7, 0xe6, 0x49, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x41,
	0x38, 0x4a, 0x2a, 0x5c, 0x3c, 0x10, 0x45, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0xd8, 0x55, 0x19,
	0x79, 0x43, 0x8c, 0xf2, 0x48, 0xcc, 0x4b, 0xc9, 0x49, 0x2d, 0x12, 0xb2, 0xe1, 0x62, 0x07, 0xd9,
	0xe0, 0x56, 0x9a, 0x2c, 0x24, 0xae, 0x87, 0xb0, 0x51, 0x0f, 0xc9, 0x3a, 0x29, 0x09, 0x4c, 0x09,
	0x88, 0x15, 0x49, 0x6c, 0x60, 0xa7, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xee, 0x08, 0xff,
	0x4e, 0xb8, 0x00, 0x00, 0x00,
}
